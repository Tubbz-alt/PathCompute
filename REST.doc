BGP-Instances:
Get BGP-Instance:
GET http://xx.xx.xx.xx:9521/pce/bgp_instances/

Create BGP-Instance:
Only one BGP Instance can be created for LS
POST http://xx.xx.xx.xx:9521/pce/bgp_instances/ 
{ 
    "instance_name" : "name", 
    "router_id" : "xx.xx.xx.xx",
    "local_as" : "AS No" 
}

Delete BGP-Instance:
DELETE http://xx.xx.xx.xx:9521/pce/bgp_instances/<instance_name>


BGP-LS Neiighbors:
Get list of BGP-LS neighbors with state:
GET http://xx.xx.xx.xx:9521/pce/get-ls-peers/

Add a BGP-LS neighbor:
POST http://xx.xx.xx.xx:9521/pce/add-ls-peer/
{
 "peer_ip" : "xx.xx.xx.xx",
 "hold_time" : "90",
 "connectretry_timer" : "10",
 "remote_port" : "179",
 "passive_mode" : "false"
}

Delete a BGP-LS neighbor:
DELETE http://xx.xx.xx.xx:9521/pce/<peer_ip>

Topology Reset in ODL:
POST http://xx.xx.xx.xx:9521/pce/topology_reset/

Path-Computation Clients:
Get list of connected PCCs:
GET http://xx.xx.xx.xx:9521/pce/pcc_list/

Get list of established tunnels:
GET http://xx.xx.xx.xx:9521/pce/established_lsps/<pcc>/

Calculating constraint based LSPs:
for Calculating constraint based LSP src_ip must be a connected PCC
POST http://xx.xx.xx.xx:9521/pce/possible_lsps/
{
         "pcc" : "xx.xx.xx.xx",
         "lsp_name" : "lsp_name",
         "src_ip" : "xx.xx.xx.xx",
         "dest_ip" : "xx.xx.xx.xx",
         "setup_priority" : 4,
         "hold_priority" : 4,
         "bandwidth" : 10000000,
         "color_list" : []
}

Push LSP to PCC from list of possible LSPs:
POST http://xx.xx.xx.xx:9521/pce/push_lsp/<path_id>/

Delete an established LSP from a PCC:
POST http://xx.xx.xx.xx:9521/pce/remove_lsp/<pcc>/<lsp_name>

Get shortest path based on IGP metric without any constraint:
POST http://xx.xx.xx.xx:9521/pce/igp_paths/
{
         "src_ip" : "xx.xx.xx.xx",
         "dest_ip" : "xx.xx.xx.xx"
}